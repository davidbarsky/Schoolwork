<!-- Uses MultiMarkdown-style formatting for nesting ordered lists.-->

1. Binary Numbers

    a. Convert each binary number to a base 10 number.

        a. 10101010 = (1 * (2^7)) + (0 * (2^6)) + (1 * (2^5)) + (0 * (2^4)) + (1 * (2^3)) + (0 * (2^2)) + (1 * (2^1)) + (0 * (2^0)) = 170

        b. 1111 = (1 * (2^3)) + (1 * (2^2)) + (1 * (2^1)) + (1 * (2^0)) = 15

        c. 10111 = (1 * (2^4)) + (0 * (2^3)) + (1 * (2^2)) + (1 * (2^1)) + (1 * (2^0)) = 23

        d. 1110110 = (1 * (2^6)) + (1 * (2^5)) + (1 * (2^4)) + (0 * (2^3)) + (1 * (2^2)) + (1 * (2^1)) + (1 * (2^0)) = 118

    b.

        a. 30 = 30 % 2  = 0, 30 / 2 = 15; 15 % 2 = 1, 15 / 2 = 7; 7 % 2 = 1, 7 / 2 = 3; 3 % 2 = 1, 3 / 2 = 1; 1 / 1 = 1, 1 % 1 = 0. Final answer: 011110

        b. 100

              100 / 2
              Remainder: (0)
              50 / 2
              Remainder: (0)
              25 / 2
              Remainder: (1)
              12 / 2
              Remainder: (0)
              6 / 2
              Remainder: (0)
              3 / 2
              Remainder: (1)
              1 / 2
              Remainder: (1)

              Binary: 1100100

        c. 25

              25 / 2
              Remainder: (1)
              12 / 2
              Remainder: (0)
              6 / 2
              Remainder: (0)
              3 / 2
              Remainder: (1)
              1 / 2
              Remainder: (1)

              Binary: 11001

        d. 72

              72 / 2
              Remainder: 0
              36 / 2
              Remainder: 0
              18 / 2
              Remainder: 0
              9 / 2
              Remainder: 1
              4 / 2
              Remainder: 0
              2 / 1
              Remainder: 0
              1 / 2
              Remainder: 1

              Binary: 1001000

    c.

        a.  101000
           +010111
           -------
            111111

        b.  101011
           +010110
           -------
           1111101

    d.

        a. 5 – 7

          5 = 0101
          7 = 0111

          Negating the 7:
          1000

          Negative 7: 1001

          0101
         +1001
         -----
         11010

        b. –3 – 2

          -3 = 0011

          1100
          Negative 3: 1101

          -2 = 0010

          1110

          0011
         +1110
         -----
         11101


  2. Evaluating Expressions

      a. int x = 21;
         int y = 4;
         double z = 4;
         double n = 14.0;

          a. z is a double, and y is a integer. When x and z interact, x gets promoted to a double. Integer division rounds down to a whole number, while doubles output specific numbers. The first is 5, the second 5.25.

          b. When x and y where put into quotation marks, making them strings. The plus sign between the two no longer functions as an addition sign, but instead concatenates strings. Therefore its result would be "xy", not 25, in the case of integer addition. (For clarity: the first is 25, the other is xy.)

          c. This problem deals with order of operations - the int, with out parenthesis, works only on n. With the parentheses, int works on the entire expression. The first is 14, and the second is 12.

          d. The first is "13 CS" (No quotation marks) and the second is "CS 112". The two values are different because placing a string in front of the two integers forces them to be treated as string, and therefore concatenated into one. The space after the string "CS" creates a space in front of the "112". In the first example, however, the numbers are treated as integers, and so are added. The " CS " string, however, is still a string, so the result of 11 + 2 gets concatenated with the string " CS ".

      b.

          a. First, the (5/2) operation works, resulting in a double. Second, 11 multiplies the result of the first operation, the result of which is promoted to a double. Thirdly, 19 % 5 runs forming a double, and then 2 is added to the result. Finally, the result of of (5/2) * 11 is subtracted from the result of 2 + 19 % 5, resulting in -24.55, which is a double..

          b. The multiplication/division operations run left to right - so first 2.5 * 2, 8/5.0, and then 10/3. All of the following are promoted to doubles. Then, they are all added together, resulting in 9.933333333 (the three's repeating).